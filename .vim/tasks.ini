[+]
build_type=Release
build_target=main
build_dir=build
build_generator=Ninja
run_environ=
run_target="$(+build_dir)/$(+build_target)"
build_options=--parallel
build_configs=
pre_build_cmd=

[project-config]
command=cmake -G "$(+build_generator)" -B "$(+build_dir)" -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DCMAKE_BUILD_TYPE="$(+build_type)"
output=quickfix
cwd=$(VIM_ROOT)
save=2

[project-build]
command=$(+pre_build_cmd) cmake -G "$(+build_generator)" -B "$(+build_dir)" -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DCMAKE_BUILD_TYPE="$(+build_type)" $(+build_configs) && cmake --build "$(+build_dir)" --target "$(+build_target)" --config "$(+build_type)" $(+build_options)
output=quickfix
cwd=$(VIM_ROOT)
save=2

[project-run]
command=$(+run_environ) $(+run_target)
output=terminal
cwd=$(VIM_ROOT)
save=2

[file-build]
command=true
command:c,cpp=g++ -O2 -Wall -fopenmp "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT).exe"
command:make=make -f "$(VIM_FILEPATH)"
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT).exe"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=bash "$(VIM_FILENAME)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2
